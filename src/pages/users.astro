---
import Base from "../layout/Base.astro";
import UsersDashboardWithToaster from "../components/UsersDashboardWithToaster";
import { getServerAdmin, clearAuthCookies } from "../lib/supabase";
import { UserService } from "../services/userService";

export const prerender = false;

// Verificar autenticaciÃ³n usando el nuevo sistema
const adminSession = await getServerAdmin(Astro);

if (!adminSession) {
  console.log('ðŸš« Acceso denegado a users - Usuario no es administrador');
  clearAuthCookies(Astro);
  return Astro.redirect("/");
}

console.log('âœ… Admin autenticado en users:', adminSession.admin.email);

// Cargar usuarios para paginaciÃ³n y filtrado del lado del cliente
const { users, total } = await UserService.searchUsers('', 1, 1000); // Cargar hasta 1000 usuarios

const usersData = {
  users: users || [],
  total: total || 0,
  adminInfo: {
    email: adminSession.admin.email,
    role: adminSession.admin.role,
    sessionExpiry: adminSession.expiresAt.toISOString()
  }
};

const title = `GestiÃ³n de Usuarios | ${adminSession.admin.email}`;
---

<Base title={title}>
  <div class="container py-6">
    <UsersDashboardWithToaster 
      client:load
      initialUsers={usersData.users}
      initialTotal={usersData.total}
      adminInfo={usersData.adminInfo}
    />
  </div>
</Base>
