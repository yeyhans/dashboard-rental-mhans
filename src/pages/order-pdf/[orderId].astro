---
let { orderId } = Astro.params;

if (!orderId) {
  return new Response('Order ID is required', { status: 400 });
}

// Remove .pdf extension if present
if (orderId.endsWith('.pdf')) {
  orderId = orderId.replace('.pdf', '');
}

// Check if it's an internal API request
const isInternalRequest = Astro.request.headers.get('X-Internal-Request') === 'true';
const requestedOrderIdFromHeader = Astro.request.headers.get('X-Requested-Order-Id');

if (isInternalRequest) {
  // Validate internal request
  if (requestedOrderIdFromHeader !== orderId) {
    console.error(`Internal request orderId mismatch: header=${requestedOrderIdFromHeader}, param=${orderId}`);
    return new Response('Internal request validation failed', { status: 400 });
  }
  console.log('✅ Internal request validated for orderId:', orderId);
}

// Get order data using service role key
let orderData;
try {
  console.log('🔧 Fetching order data with service role key for orderId:', orderId);
  const { createClient } = await import('@supabase/supabase-js');
  const serviceSupabase = createClient(
    import.meta.env.PUBLIC_SUPABASE_URL!,
    import.meta.env.SUPABASE_SERVICE_ROLE_KEY || import.meta.env.PUBLIC_SUPABASE_ANON_KEY!
  );
  
  const { data: order, error } = await serviceSupabase
    .from('orders')
    .select('*')
    .eq('id', parseInt(orderId))
    .single();
  
  if (error || !order) {
    console.error('Error fetching order data:', error);
    return new Response('Order not found', { status: 404 });
  }
  
  orderData = order;
  console.log('✅ Order data fetched successfully');
} catch (error) {
  console.error('Error fetching order data:', error);
  return new Response('Error fetching order data', { status: 500 });
}

// Set security headers
Astro.response.headers.set('X-Frame-Options', 'DENY');
Astro.response.headers.set('X-Content-Type-Options', 'nosniff');
Astro.response.headers.set('Cache-Control', 'private, no-cache, no-store, must-revalidate');

// Generate current date
const currentDate = new Date().toLocaleDateString('es-CL', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

// Parse order data with fallbacks for all column formats
const billing = orderData.billing || {};
const metadata = orderData.metadata || {};
const lineItems = orderData.line_items || [];
const couponLines = orderData.coupon_lines || [];

// Extract data with fallbacks (supports both nested and flat structures)
const customerFirstName = billing.first_name || orderData.billing_first_name || '';
const customerLastName = billing.last_name || orderData.billing_last_name || '';
const customerCompany = billing.company || orderData.billing_company || '';
const customerEmail = billing.email || orderData.billing_email || '';
const customerPhone = billing.phone || orderData.billing_phone || '';
const customerAddress = billing.address_1 || orderData.billing_address_1 || '';
const customerCity = billing.city || orderData.billing_city || '';
const customerRut = billing.rut || orderData.billing_rut || '';

// Project information with fallbacks
const projectName = metadata.order_proyecto || orderData.order_proyecto || 'Proyecto de Arriendo';
const startDate = metadata.order_fecha_inicio || orderData.order_fecha_inicio || '';
const endDate = metadata.order_fecha_termino || orderData.order_fecha_termino || '';
const numJornadas = parseInt(metadata.num_jornadas || orderData.num_jornadas || '1');
const companyRut = metadata.company_rut || orderData.company_rut || '';

// Retirement information
const retireName = metadata.order_retire_name || orderData.order_retire_name || '';
const retirePhone = metadata.order_retire_phone || orderData.order_retire_phone || '';
const retireRut = metadata.order_retire_rut || orderData.order_retire_rut || '';
const comments = metadata.order_comments || orderData.order_comments || '';

// Calculate totals with fallbacks
const subtotal = parseFloat(metadata.calculated_subtotal || orderData.calculated_subtotal || '0');
const discount = parseFloat(metadata.calculated_discount || orderData.calculated_discount || '0');
const iva = parseFloat(metadata.calculated_iva || orderData.calculated_iva || '0');
const total = parseFloat(metadata.calculated_total || orderData.calculated_total || '0');
const reserve = total * 0.25;

// Additional order information
const orderIdNum = orderData.id || orderData.order_id;
const orderStatus = orderData.status || 'processing';
const createdDate = orderData.date_created || orderData.created_at || new Date().toISOString();
const paymentMethod = orderData.payment_method || orderData.payment_method_title || 'Por definir';

// Format currency
const formatCLP = (amount: number) => {
  return new Intl.NumberFormat('es-CL', { 
    style: 'currency', 
    currency: 'CLP',
    minimumFractionDigits: 0,
    maximumFractionDigits: 0
  }).format(amount);
};

// Generate contract number
const contractNumber = `CONT-${orderIdNum}-${Date.now().toString().slice(-6)}`;
---

<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Contrato de Arriendo - {customerFirstName} {customerLastName}</title>
  <style>
    body {
        font-family: Arial, sans-serif;
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        line-height: 1.6;
        color: #333;
        background: white;
    }
    
    .header {
        text-align: center;
        margin-bottom: 30px;
        border-bottom: 3px solid #2563eb;
        padding-bottom: 20px;
    }
    
    .logo {
        max-width: 200px;
        height: auto;
        margin-bottom: 10px;
    }
    
    .company-info {
        font-size: 14px;
        color: #666;
        margin-bottom: 10px;
    }
    
    .document-title {
        font-size: 28px;
        font-weight: bold;
        color: #2563eb;
        margin: 20px 0;
    }
    
    .contract-info {
        background: #f8fafc;
        padding: 15px;
        border-radius: 8px;
        margin: 20px 0;
        border-left: 4px solid #2563eb;
    }
    
    .section {
        margin: 25px 0;
        page-break-inside: avoid;
    }
    
    .section-title {
        font-size: 18px;
        font-weight: bold;
        color: #1e40af;
        margin-bottom: 15px;
        padding-bottom: 5px;
        border-bottom: 2px solid #e5e7eb;
    }
    
    .info-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
        margin: 15px 0;
    }
    
    .info-item {
        margin-bottom: 10px;
    }
    
    .info-label {
        font-weight: bold;
        color: #374151;
        display: inline-block;
        min-width: 120px;
    }
    
    .info-value {
        color: #6b7280;
    }
    
    .products-table {
        width: 100%;
        border-collapse: collapse;
        margin: 15px 0;
        font-size: 14px;
    }
    
    .products-table th,
    .products-table td {
        border: 1px solid #d1d5db;
        padding: 12px 8px;
        text-align: left;
    }
    
    .products-table th {
        background: #f3f4f6;
        font-weight: bold;
        color: #374151;
    }
    
    .products-table tr:nth-child(even) {
        background: #f9fafb;
    }
    
    .totals-section {
        background: #f8fafc;
        padding: 20px;
        border-radius: 8px;
        margin: 20px 0;
    }
    
    .totals-grid {
        display: grid;
        grid-template-columns: 1fr auto;
        gap: 10px;
        align-items: center;
    }
    
    .total-label {
        font-weight: bold;
        color: #374151;
    }
    
    .total-value {
        font-weight: bold;
        text-align: right;
        color: #1f2937;
    }
    
    .grand-total {
        font-size: 18px;
        color: #2563eb;
        border-top: 2px solid #e5e7eb;
        padding-top: 10px;
        margin-top: 10px;
    }
    
    .terms-section {
        background: #fefefe;
        border: 1px solid #e5e7eb;
        border-radius: 8px;
        padding: 20px;
        margin: 25px 0;
        font-size: 14px;
        line-height: 1.8;
    }
    
    .terms-title {
        font-size: 16px;
        font-weight: bold;
        color: #1e40af;
        margin-bottom: 15px;
        text-align: center;
    }
    
    .terms-list {
        list-style-type: decimal;
        padding-left: 20px;
    }
    
    .terms-list li {
        margin-bottom: 10px;
        color: #374151;
    }
    
    .signature-section {
        margin-top: 40px;
        page-break-inside: avoid;
    }
    
    .signature-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 40px;
        margin-top: 30px;
    }
    
    .signature-box {
        text-align: center;
        padding: 20px;
        border: 1px solid #d1d5db;
        border-radius: 8px;
        background: #fafafa;
    }
    
    .signature-line {
        border-top: 2px solid #374151;
        margin: 40px 0 10px 0;
        width: 200px;
        margin-left: auto;
        margin-right: auto;
    }
    
    .signature-label {
        font-weight: bold;
        color: #374151;
        margin-top: 10px;
    }
    
    .footer {
        margin-top: 40px;
        text-align: center;
        font-size: 12px;
        color: #6b7280;
        border-top: 1px solid #e5e7eb;
        padding-top: 20px;
    }
    
    .status-badge {
        display: inline-block;
        padding: 4px 12px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: bold;
        text-transform: uppercase;
    }
    
    .status-processing {
        background: #dcfce7;
        color: #166534;
    }
    
    .status-on-hold {
        background: #fef3c7;
        color: #92400e;
    }
    
    .status-completed {
        background: #dbeafe;
        color: #1e40af;
    }
    
    .coupon-section {
        background: #fef7cd;
        border: 1px solid #f59e0b;
        border-radius: 8px;
        padding: 15px;
        margin: 15px 0;
    }
    
    .coupon-title {
        font-weight: bold;
        color: #92400e;
        margin-bottom: 10px;
    }
    
    .warranty-info {
        background: #ecfdf5;
        border: 1px solid #10b981;
        border-radius: 8px;
        padding: 15px;
        margin: 20px 0;
    }
    
    .warranty-title {
        font-weight: bold;
        color: #065f46;
        margin-bottom: 10px;
    }
    
    @media print {
        body {
            margin: 0;
            padding: 15px;
        }
        
        .section {
            page-break-inside: avoid;
        }
        
        .signature-section {
            page-break-before: auto;
        }
    }
    
    @page {
        margin: 2cm;
        size: A4;
    }
  </style>
</head>
<body>
  <!-- Header -->
  <div class="header">
    <img src="/logo-black.png" alt="Logo Empresa" class="logo">
    <div class="company-info">
      <strong>RENTAL MHANS</strong><br>
      Arriendo de Equipos y Herramientas<br>
      Teléfono: +56 9 XXXX XXXX | Email: contacto@rentalmhans.cl
    </div>
    <div class="document-title">CONTRATO DE ARRIENDO</div>
  </div>

  <!-- Contract Information -->
  <div class="contract-info">
    <div class="info-grid">
      <div>
        <div class="info-item">
          <span class="info-label">Contrato N°:</span>
          <span class="info-value">{contractNumber}</span>
        </div>
        <div class="info-item">
          <span class="info-label">Orden N°:</span>
          <span class="info-value">{orderIdNum}</span>
        </div>
      </div>
      <div>
        <div class="info-item">
          <span class="info-label">Fecha:</span>
          <span class="info-value">{currentDate}</span>
        </div>
        <div class="info-item">
          <span class="info-label">Estado:</span>
          <span class={`status-badge status-${orderStatus}`}>{orderStatus === 'processing' ? 'En Proceso' : orderStatus === 'on-hold' ? 'En Espera' : 'Completado'}</span>
        </div>
      </div>
    </div>
  </div>

  <!-- Customer Information -->
  <div class="section">
    <div class="section-title">INFORMACIÓN DEL CLIENTE</div>
    <div class="info-grid">
      <div>
        <div class="info-item">
          <span class="info-label">Nombre:</span>
          <span class="info-value">{customerFirstName} {customerLastName}</span>
        </div>
        <div class="info-item">
          <span class="info-label">Email:</span>
          <span class="info-value">{customerEmail}</span>
        </div>
        <div class="info-item">
          <span class="info-label">Teléfono:</span>
          <span class="info-value">{customerPhone}</span>
        </div>
        {customerRut && (
          <div class="info-item">
            <span class="info-label">RUT:</span>
            <span class="info-value">{customerRut}</span>
          </div>
        )}
      </div>
      <div>
        {customerCompany && (
          <div class="info-item">
            <span class="info-label">Empresa:</span>
            <span class="info-value">{customerCompany}</span>
          </div>
        )}
        {companyRut && (
          <div class="info-item">
            <span class="info-label">RUT Empresa:</span>
            <span class="info-value">{companyRut}</span>
          </div>
        )}
        <div class="info-item">
          <span class="info-label">Dirección:</span>
          <span class="info-value">{customerAddress}</span>
        </div>
        <div class="info-item">
          <span class="info-label">Ciudad:</span>
          <span class="info-value">{customerCity}</span>
        </div>
      </div>
    </div>
  </div>

  <!-- Project Information -->
  <div class="section">
    <div class="section-title">INFORMACIÓN DEL PROYECTO</div>
    <div class="info-grid">
      <div>
        <div class="info-item">
          <span class="info-label">Proyecto:</span>
          <span class="info-value">{projectName}</span>
        </div>
        <div class="info-item">
          <span class="info-label">Fecha Inicio:</span>
          <span class="info-value">{startDate}</span>
        </div>
      </div>
      <div>
        <div class="info-item">
          <span class="info-label">Fecha Término:</span>
          <span class="info-value">{endDate}</span>
        </div>
        <div class="info-item">
          <span class="info-label">Jornadas:</span>
          <span class="info-value">{numJornadas} día{numJornadas !== 1 ? 's' : ''}</span>
        </div>
      </div>
    </div>
    
    {(retireName || retirePhone || retireRut) && (
      <div class="warranty-info">
        <div class="warranty-title">INFORMACIÓN DE RETIRO</div>
        {retireName && (
          <div class="info-item">
            <span class="info-label">Persona de Retiro:</span>
            <span class="info-value">{retireName}</span>
          </div>
        )}
        {retirePhone && (
          <div class="info-item">
            <span class="info-label">Teléfono:</span>
            <span class="info-value">{retirePhone}</span>
          </div>
        )}
        {retireRut && (
          <div class="info-item">
            <span class="info-label">RUT:</span>
            <span class="info-value">{retireRut}</span>
          </div>
        )}
      </div>
    )}
    
    {comments && (
      <div class="info-item">
        <span class="info-label">Comentarios:</span>
        <span class="info-value">{comments}</span>
      </div>
    )}
  </div>

  <!-- Products Section -->
  <div class="section">
    <div class="section-title">EQUIPOS Y HERRAMIENTAS</div>
    <table class="products-table">
      <thead>
        <tr>
          <th>Producto</th>
          <th>SKU</th>
          <th>Cantidad</th>
          <th>Precio/Día</th>
          <th>Días</th>
          <th>Subtotal</th>
        </tr>
      </thead>
      <tbody>
        {lineItems.map((item: any) => {
          const itemPrice = parseFloat(item.price || '0');
          const itemQuantity = parseInt(item.quantity || '1');
          const itemSubtotal = itemPrice * itemQuantity * numJornadas;
          
          return (
            <tr>
              <td>{item.name || 'Producto'}</td>
              <td>{item.sku || '-'}</td>
              <td>{itemQuantity}</td>
              <td>{formatCLP(itemPrice)}</td>
              <td>{numJornadas}</td>
              <td>{formatCLP(itemSubtotal)}</td>
            </tr>
          );
        })}
      </tbody>
    </table>
  </div>

  <!-- Coupons Section -->
  {couponLines.length > 0 && (
    <div class="coupon-section">
      <div class="coupon-title">DESCUENTOS APLICADOS</div>
      {couponLines.map((coupon: any) => (
        <div class="info-item">
          <span class="info-label">Cupón {coupon.code}:</span>
          <span class="info-value">-{formatCLP(parseFloat(coupon.discount || '0'))}</span>
        </div>
      ))}
    </div>
  )}

  <!-- Totals Section -->
  <div class="totals-section">
    <div class="section-title">RESUMEN FINANCIERO</div>
    <div class="totals-grid">
      <span class="total-label">Subtotal:</span>
      <span class="total-value">{formatCLP(subtotal)}</span>
      
      {discount > 0 && (
        <>
          <span class="total-label">Descuento:</span>
          <span class="total-value">-{formatCLP(discount)}</span>
        </>
      )}
      
      <span class="total-label">IVA (19%):</span>
      <span class="total-value">{formatCLP(iva)}</span>
      
      <span class="total-label grand-total">TOTAL:</span>
      <span class="total-value grand-total">{formatCLP(total)}</span>
      
      <span class="total-label">Reserva (25%):</span>
      <span class="total-value">{formatCLP(reserve)}</span>
      
      <span class="total-label">Método de Pago:</span>
      <span class="total-value">{paymentMethod}</span>
    </div>
  </div>

  <!-- Terms and Conditions -->
  <div class="terms-section">
    <div class="terms-title">TÉRMINOS Y CONDICIONES DEL CONTRATO</div>
    <ol class="terms-list">
      <li><strong>OBJETO DEL CONTRATO:</strong> El presente contrato tiene por objeto el arriendo de equipos y herramientas detallados en la sección de productos.</li>
      
      <li><strong>PLAZO:</strong> El arriendo tendrá una duración de {numJornadas} día{numJornadas !== 1 ? 's' : ''}, desde el {startDate} hasta el {endDate}.</li>
      
      <li><strong>PRECIO Y FORMA DE PAGO:</strong> El precio total del arriendo es de {formatCLP(total)}, incluido IVA. Se requiere una reserva del 25% ({formatCLP(reserve)}) para confirmar el arriendo.</li>
      
      <li><strong>ENTREGA Y DEVOLUCIÓN:</strong> Los equipos serán entregados en la fecha acordada y deberán ser devueltos en las mismas condiciones en que fueron entregados.</li>
      
      <li><strong>RESPONSABILIDAD:</strong> El arrendatario se hace responsable del cuidado y buen uso de los equipos durante el período de arriendo.</li>
      
      <li><strong>DAÑOS Y PÉRDIDAS:</strong> Cualquier daño o pérdida de los equipos será de responsabilidad del arrendatario y deberá ser compensado según el valor comercial del equipo.</li>
      
      <li><strong>GARANTÍA:</strong> Se requiere una garantía equivalente al valor total de los equipos arrendados.</li>
      
      <li><strong>CANCELACIÓN:</strong> Las cancelaciones deben ser notificadas con al menos 24 horas de anticipación.</li>
      
      <li><strong>FUERZA MAYOR:</strong> Ninguna de las partes será responsable por el incumplimiento debido a causas de fuerza mayor.</li>
      
      <li><strong>JURISDICCIÓN:</strong> Cualquier controversia será resuelta en los tribunales competentes de Chile.</li>
    </ol>
  </div>

  <!-- Signature Section -->
  <div class="signature-section">
    <div class="section-title">FIRMAS</div>
    <p style="text-align: center; margin-bottom: 30px;">
      Las partes declaran haber leído y aceptado todos los términos y condiciones del presente contrato.
    </p>
    
    <div class="signature-grid">
      <div class="signature-box">
        <div class="signature-line"></div>
        <div class="signature-label">ARRENDADOR</div>
        <div style="margin-top: 10px; font-size: 14px;">
          RENTAL MHANS<br>
          RUT: XX.XXX.XXX-X
        </div>
      </div>
      
      <div class="signature-box">
        <div class="signature-line"></div>
        <div class="signature-label">ARRENDATARIO</div>
        <div style="margin-top: 10px; font-size: 14px;">
          {customerFirstName} {customerLastName}<br>
          {customerRut && `RUT: ${customerRut}`}
        </div>
      </div>
    </div>
  </div>

  <!-- Footer -->
  <div class="footer">
    <p>
      <strong>RENTAL MHANS</strong> - Arriendo de Equipos y Herramientas<br>
      Contrato generado el {currentDate} | Documento N° {contractNumber}
    </p>
  </div>
</body>
</html>
