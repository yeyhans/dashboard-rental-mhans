---
import Base from "../../layout/Base.astro";
import OrderDetails from "../../components/orders/OrderDetails";
import { supabase } from "../../lib/supabase";
import ProcessOrder from "../../components/orders/ProcessOrder";

export const prerender = false;

interface WPOrder {
  id: number;
  status: string;
  date_created: string;
  total: string;
  customer: {
    first_name: string;
    last_name: string;
    email: string;
  };
  fotos_garantia: string[];
  correo_enviado: boolean;
  pago_completo: boolean;
}

const { data: { session } } = await supabase.auth.getSession();

if (!session) {
  return Astro.redirect("/");
}

// Get the order ID from the URL parameter
const { id } = Astro.params;

if (!id) {
  return Astro.redirect("/orders");
}

// Fetch the order data for this specific ID
const response = await fetch(`${Astro.url.origin}/api/woo/get-order/${id}`);
const orderData = await response.json();

let specificOrder: WPOrder | null = null;

try {
  const response2 = await fetch(`${Astro.url.origin}/api/wp/get-orders/`);
  const orderData2 = await response2.json();

  // Filter the specific order that matches the ID
  specificOrder = orderData2.orders.orders.find(
    (order: WPOrder) => order.id === parseInt(id)
  ) || null;
  
  if (!specificOrder) {
    console.log('Order not found in WP data');
  } else {
    console.log('Found WP Order:', JSON.stringify(specificOrder, null, 2));
  }
} catch (error) {
  console.error('Error fetching WP order data:', error);
}

const title = `Orden #${id}`;
---

<Base title={title}>
  <div class="container py-6">
    {orderData.success ? (
      <>
        <OrderDetails 
          client:load
          order={{
            ...orderData.data,
            correo_enviado: specificOrder?.correo_enviado || false,
            pago_completo: specificOrder?.pago_completo || false
          }} 
        />

        {specificOrder && (
          <ProcessOrder
            client:load
            order={{
              orders: {
                success: true,
                orders: specificOrder ? [{
                  ...specificOrder,
                  pago_completo: Boolean(specificOrder.pago_completo)
                }] : []
              }
            }}
          />
        )}
      </>
    ) : (
      <div class="p-4 bg-destructive/10 text-destructive rounded-md">
        <p>Error al cargar el pedido: {orderData.message}</p>
      </div>
    )}
  </div>
</Base>
