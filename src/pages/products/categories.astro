---
import Base from '../../layout/Base.astro';
import { supabase } from '../../lib/supabase';
import { CategoryService } from '../../services/categoryService';
import CategoriesDashboard from '../../components/CategoriesDashboard';
import { Toaster } from '../../components/ui/sonner';

// Verificar autenticación
const { data: { session } } = await supabase?.auth.getSession() || { data: { session: null } };

if (!session) {
  return Astro.redirect('/');
}

// Cargar datos iniciales de categorías
let initialData = null;
let error = null;

try {
  // Obtener las primeras 20 categorías y estadísticas básicas
  const categoriesResult = await CategoryService.getAllCategories(1, 20);
  
  // Obtener estadísticas básicas
  const allCategories = await CategoryService.getAllCategories(1, 1000); // Para contar
  const hierarchyData = await CategoryService.getCategoriesHierarchy();
  
  // Calcular estadísticas
  const totalCategories = allCategories.total;
  const mainCategories = hierarchyData.length; // Categorías sin padre
  const subCategories = totalCategories - mainCategories;
  const withImages = allCategories.categories?.filter(cat => cat.image_src).length || 0;
  
  initialData = {
    categories: categoriesResult.categories || [],
    pagination: {
      page: categoriesResult.page,
      limit: categoriesResult.limit,
      total: categoriesResult.total,
      totalPages: categoriesResult.totalPages
    },
    stats: {
      total: totalCategories,
      main: mainCategories,
      sub: subCategories,
      withImages: withImages
    }
  };
} catch (err) {
  console.error('Error loading initial categories data:', err);
  error = 'Error al cargar las categorías iniciales';
  initialData = {
    categories: [],
    pagination: { page: 1, limit: 20, total: 0, totalPages: 0 },
    stats: { total: 0, main: 0, sub: 0, withImages: 0 }
  };
}
---

<Base title="Gestión de Categorías - Sistema de Alquiler">
  <div class="min-h-screen bg-background">
    <div class="container mx-auto px-4 py-8">
      {error && (
        <div class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-4">
          <p><strong>Error:</strong> {error}</p>
        </div>
      )}
      
      <CategoriesDashboard 
        client:load
        initialCategories={initialData?.categories || []}
        initialTotal={initialData?.pagination?.total || 0}
      />
      
      <Toaster 
        client:load
        position="top-right"
        richColors={true}
        closeButton={true}
      />
    </div>
  </div>

  <!-- Estilos adicionales para el dashboard -->
  <style>
    /* Asegurar que el contenedor principal tenga el espacio correcto */
    .container {
      max-width: 1400px;
    }
    
    /* Estilos para mejorar la experiencia móvil */
    @media (max-width: 768px) {
      .container {
        padding-left: 1rem;
        padding-right: 1rem;
      }
    }
    
    /* Estilos para los diálogos */
    [data-radix-portal] {
      z-index: 50;
    }
    
    /* Asegurar que los toasts aparezcan correctamente */
    [data-sonner-toaster] {
      z-index: 100;
    }
  </style>
</Base>